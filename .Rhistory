aes(x = SelfReported, y = wikipedia))+
geom_point(aes(color = QA_Eval_area))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_gadm_area.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_area %>% select(GADM, SelfReported, QA_Eval_area)
%>% filter(if_all(c(GADM, SelfReported),complete.cases)),
aes(x = SelfReported, y = GADM))+
geom_point(aes(color = QA_Eval_area))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
complete_context_plot_pop <- complete_context_w_QA%>%
mutate(population_datasource = case_when(population_datasource == 'CCNT' ~ 'SelfReported',
population_datasource == 'CDPe'~ 'SelfReported',
population_datasource == 'CDPt'~ 'SelfReported',
population_datasource == 'CDP'~ 'SelfReported',
population_datasource == 'EUC'~ 'SelfReported',
population_datasource == 'JRC'~ 'SelfReported',
population_datasource == 'ICLEI'~ 'SelfReported',
population_datasource == 'JPNMIAC'~ 'SelfReported',
TRUE ~ population_datasource))%>%
select(name, iso, entity_type,  QA_Eval_pop, starts_with("population"))%>%distinct()%>%
filter(if_all(c(population, population_datasource, population_year), complete.cases))%>%
group_by(name, iso, entity_type, population_year, population_datasource)%>% add_count()%>%
mutate(registry_id_pop = 1:n())%>% select(-n)%>% ungroup()%>%
pivot_wider(names_from = population_datasource, values_from = population)
View(complete_context_plot_pop)
complete_context_plot_lat <- complete_context_w_QA%>%
mutate(territory_datasource= case_when(territory_datasource == 'CCNT' ~ 'SelfReported',
territory_datasource == 'NZT'~ 'SelfReported',
territory_datasource == 'C40'~ 'SelfReported',
territory_datasource == 'CDPe'~ 'SelfReported',
territory_datasource == 'CDPc'~ 'SelfReported',
territory_datasource == 'GCoM'~ 'SelfReported',
territory_datasource == 'CDP'~ 'SelfReported',
territory_datasource == 'EUC'~ 'SelfReported',
territory_datasource == 'JRC'~ 'SelfReported',
territory_datasource == 'USCM'~ 'SelfReported',
territory_datasource == 'USEIA'~ 'SelfReported',
territory_datasource == 'ICLEI'~ 'SelfReported',
territory_datasource == 'JPPT'~ 'SelfReported',
TRUE ~ territory_datasource))%>%
select(name, iso, entity_type,  QA_Eval_cent, lat, starts_with("territory"))%>%distinct()%>%
filter(if_all(c(lat, territory_datasource), complete.cases))%>%
group_by(name, iso, entity_type, territory_datasource)%>% add_count()%>%mutate(registry_id_cent = 1:n())%>%
select(-n)%>% ungroup()%>%
pivot_wider(names_from = territory_datasource, values_from = lat)
View(complete_context_plot_lat)
#### Plotting ####
complete_context_plot_pop <- complete_context_w_QA%>%
mutate(population_datasource = case_when(population_datasource == 'CCNT' ~ 'SelfReported',
population_datasource == 'CDPe'~ 'SelfReported',
population_datasource == 'CDPt'~ 'SelfReported',
population_datasource == 'CDP'~ 'SelfReported',
population_datasource == 'EUC'~ 'SelfReported',
population_datasource == 'JRC'~ 'SelfReported',
population_datasource == 'ICLEI'~ 'SelfReported',
population_datasource == 'JPNMIAC'~ 'SelfReported',
TRUE ~ population_datasource))%>%
select(name, iso, entity_type,  QA_Eval_pop, starts_with("population"))%>%distinct()%>%
filter(if_all(c(population, population_datasource, population_year), complete.cases))%>%
group_by(name, iso, entity_type, population_year, population_datasource)%>% add_count()%>%
mutate(registry_id_pop = 1:n())%>% select(-n)%>% ungroup()%>%
pivot_wider(names_from = population_datasource, values_from = population)
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_wiki_pop.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_pop %>% select(wikipedia, SelfReported, QA_Eval_pop)
%>% filter(if_all(c(wikipedia, SelfReported),complete.cases)),
aes(x = SelfReported/10^6, y = wikipedia/10^6))+
geom_point(aes(color = QA_Eval_pop))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_gwp_pop.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_pop %>% select(GPW_v4, SelfReported, QA_Eval_pop)
%>% filter(if_all(c(GPW_v4, SelfReported),complete.cases)),
aes(x = SelfReported/10^6, y = GPW_v4/10^6))+
geom_point(aes(color = QA_Eval_pop))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
complete_context_plot_lat <- complete_context_w_QA%>%
mutate(territory_datasource= case_when(territory_datasource == 'CCNT' ~ 'SelfReported',
territory_datasource == 'NZT'~ 'SelfReported',
territory_datasource == 'C40'~ 'SelfReported',
territory_datasource == 'CDPe'~ 'SelfReported',
territory_datasource == 'CDPc'~ 'SelfReported',
territory_datasource == 'GCoM'~ 'SelfReported',
territory_datasource == 'CDP'~ 'SelfReported',
territory_datasource == 'EUC'~ 'SelfReported',
territory_datasource == 'JRC'~ 'SelfReported',
territory_datasource == 'USCM'~ 'SelfReported',
territory_datasource == 'USEIA'~ 'SelfReported',
territory_datasource == 'ICLEI'~ 'SelfReported',
territory_datasource == 'JPPT'~ 'SelfReported',
TRUE ~ territory_datasource))%>%
select(name, iso, entity_type,  QA_Eval_cent, lat, starts_with("territory"))%>%distinct()%>%
filter(if_all(c(lat, territory_datasource), complete.cases))%>%
group_by(name, iso, entity_type, territory_datasource)%>% add_count()%>%mutate(registry_id_cent = 1:n())%>%
select(-n)%>% ungroup()%>%
pivot_wider(names_from = territory_datasource, values_from = lat)
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_wiki_lat.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_lat %>% select(wikipedia, SelfReported, QA_Eval_cent)
%>% filter(if_all(c(wikipedia, SelfReported),complete.cases)),
aes(x = SelfReported, y = wikipedia))+
geom_point(aes(color = QA_Eval_cent))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_gadm_lat.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_lat %>% select(GADM, SelfReported, QA_Eval_cent)
%>% filter(if_all(c(GADM, SelfReported),complete.cases)),
aes(x = SelfReported, y = GADM))+
geom_point(aes(color = QA_Eval_cent))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
complete_context_plot_lng <- complete_context_w_QA%>%
mutate(territory_datasource= case_when(territory_datasource == 'CCNT' ~ 'SelfReported',
territory_datasource == 'NZT'~ 'SelfReported',
territory_datasource == 'C40'~ 'SelfReported',
territory_datasource == 'CDPe'~ 'SelfReported',
territory_datasource == 'CDPc'~ 'SelfReported',
territory_datasource == 'GCoM'~ 'SelfReported',
territory_datasource == 'CDP'~ 'SelfReported',
territory_datasource == 'EUC'~ 'SelfReported',
territory_datasource == 'JRC'~ 'SelfReported',
territory_datasource == 'USCM'~ 'SelfReported',
territory_datasource == 'USEIA'~ 'SelfReported',
territory_datasource == 'ICLEI'~ 'SelfReported',
territory_datasource == 'JPPT'~ 'SelfReported',
TRUE ~ territory_datasource))%>%
select(name, iso, entity_type,  QA_Eval_cent, lng, starts_with("territory"))%>%distinct()%>%
filter(if_all(c(lng, territory_datasource), complete.cases))%>%
group_by(name, iso, entity_type, territory_datasource)%>% add_count()%>%mutate(registry_id_cent = 1:n())%>%
select(-n)%>% ungroup()%>%
pivot_wider(names_from = territory_datasource, values_from = lng)
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_wiki_lng.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_lng %>% select(wikipedia, SelfReported, QA_Eval_cent)
%>% filter(if_all(c(wikipedia, SelfReported),complete.cases)),
aes(x = SelfReported, y = wikipedia))+
geom_point(aes(color = QA_Eval_cent))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_gadm_lng.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_lng %>% select(GADM, SelfReported, QA_Eval_cent)
%>% filter(if_all(c(GADM, SelfReported),complete.cases)),
aes(x = SelfReported, y = GADM))+
geom_point(aes(color = QA_Eval_cent))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
complete_context_plot_area <- complete_context_w_QA%>%
mutate(territory_datasource= case_when(territory_datasource == 'CCNT' ~ 'SelfReported',
territory_datasource == 'NZT'~ 'SelfReported',
territory_datasource == 'C40'~ 'SelfReported',
territory_datasource == 'CDPe'~ 'SelfReported',
territory_datasource == 'CDPc'~ 'SelfReported',
territory_datasource == 'GCoM'~ 'SelfReported',
territory_datasource == 'CDP'~ 'SelfReported',
territory_datasource == 'EUC'~ 'SelfReported',
territory_datasource == 'JRC'~ 'SelfReported',
territory_datasource == 'USCM'~ 'SelfReported',
territory_datasource == 'USEIA'~ 'SelfReported',
territory_datasource == 'ICLEI'~ 'SelfReported',
territory_datasource == 'JPPT'~ 'SelfReported',
TRUE ~ territory_datasource))%>%
select(name, iso, entity_type,  QA_Eval_area, area, starts_with("territory"))%>%distinct()%>%
filter(if_all(c(area, territory_datasource), complete.cases))%>%
group_by(name, iso, entity_type, territory_datasource)%>% add_count()%>%mutate(registry_id_cent = 1:n())%>%
select(-n)%>% ungroup()%>%
pivot_wider(names_from = territory_datasource, values_from = area)
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_wiki_area.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_area %>% select(wikipedia, SelfReported, QA_Eval_area)
%>% filter(if_all(c(wikipedia, SelfReported),complete.cases)),
aes(x = SelfReported, y = wikipedia))+
geom_point(aes(color = QA_Eval_area))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_gadm_area.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_area %>% select(GADM, SelfReported, QA_Eval_area)
%>% filter(if_all(c(GADM, SelfReported),complete.cases)),
aes(x = SelfReported, y = GADM))+
geom_point(aes(color = QA_Eval_area))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
View(complete_context_plot_pop)
complete_context_plot_pop <- complete_context_w_QA%>%
mutate(population_datasource = case_when(population_datasource == 'CCNT' ~ 'SelfReported',
population_datasource == 'CDPe'~ 'SelfReported',
population_datasource == 'CDPt'~ 'SelfReported',
population_datasource == 'CDP'~ 'SelfReported',
population_datasource == 'EUC'~ 'SelfReported',
population_datasource == 'JRC'~ 'SelfReported',
population_datasource == 'ICLEI'~ 'SelfReported',
population_datasource == 'JPNMIAC'~ 'SelfReported',
TRUE ~ population_datasource))%>%
select(name, iso, entity_type,  QA_Eval_pop, starts_with("population"))%>%distinct()%>%
filter(if_all(c(population, population_datasource, population_year), complete.cases))%>%
group_by(name, iso, entity_type, population_year, population_datasource)%>% add_count()%>%
mutate(registry_id_pop = 1:n())%>% select(-n, -registry_id_pop)%>% ungroup()%>%
pivot_wider(names_from = population_datasource, values_from = population)
complete_context_plot_pop <- complete_context_w_QA%>%
mutate(population_datasource = case_when(population_datasource == 'CCNT' ~ 'SelfReported',
population_datasource == 'CDPe'~ 'SelfReported',
population_datasource == 'CDPt'~ 'SelfReported',
population_datasource == 'CDP'~ 'SelfReported',
population_datasource == 'EUC'~ 'SelfReported',
population_datasource == 'JRC'~ 'SelfReported',
population_datasource == 'ICLEI'~ 'SelfReported',
population_datasource == 'JPNMIAC'~ 'SelfReported',
TRUE ~ population_datasource))%>%
select(name, iso, entity_type,  QA_Eval_pop, starts_with("population"))%>%distinct()%>%
filter(if_all(c(population, population_datasource, population_year), complete.cases))%>%
group_by(name, iso, entity_type, population_year, population_datasource)%>% add_count()%>%
mutate(registry_id_pop = 1:n())%>% filter(n==1) %>% select(-n, -registry_id_pop)%>% ungroup()%>%
pivot_wider(names_from = population_datasource, values_from = population)
ggplot(complete_context_plot_pop %>% select(wikipedia, SelfReported, QA_Eval_pop)
%>% filter(if_all(c(wikipedia, SelfReported),complete.cases)),
aes(x = SelfReported/10^6, y = wikipedia/10^6))+
geom_point(aes(color = QA_Eval_pop))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_wiki_pop.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_pop %>% select(wikipedia, SelfReported, QA_Eval_pop)
%>% filter(if_all(c(wikipedia, SelfReported),complete.cases)),
aes(x = SelfReported/10^6, y = wikipedia/10^6))+
geom_point(aes(color = QA_Eval_pop))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_gwp_pop.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_pop %>% select(GPW_v4, SelfReported, QA_Eval_pop)
%>% filter(if_all(c(GPW_v4, SelfReported),complete.cases)),
aes(x = SelfReported/10^6, y = GPW_v4/10^6))+
geom_point(aes(color = QA_Eval_pop))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
complete_context_plot_pop <- complete_context_w_QA%>%
mutate(population_datasource = case_when(population_datasource == 'CCNT' ~ 'SelfReported',
population_datasource == 'CDPe'~ 'SelfReported',
population_datasource == 'CDPt'~ 'SelfReported',
population_datasource == 'CDP'~ 'SelfReported',
population_datasource == 'EUC'~ 'SelfReported',
population_datasource == 'JRC'~ 'SelfReported',
population_datasource == 'ICLEI'~ 'SelfReported',
population_datasource == 'JPNMIAC'~ 'SelfReported',
TRUE ~ population_datasource))%>%
select(name, iso, entity_type,  QA_Eval_pop, starts_with("population"))%>%distinct()%>%
filter(if_all(c(population, population_datasource, population_year), complete.cases))%>%
group_by(name, iso, entity_type, population_year, population_datasource)%>% add_count()%>%
mutate(registry_id_pop = 1:n())%>%
filter( n == 1)%>%select(-registry_id_pop, -n)%>% ungroup()%>%
pivot_wider(names_from = population_datasource, values_from = population)
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_wiki_pop.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_pop %>% select(wikipedia, SelfReported, QA_Eval_pop)
%>% filter(if_all(c(wikipedia, SelfReported),complete.cases)),
aes(x = SelfReported/10^6, y = wikipedia/10^6))+
geom_point(aes(color = QA_Eval_pop))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_gwp_pop.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_pop %>% select(GPW_v4, SelfReported, QA_Eval_pop)
%>% filter(if_all(c(GPW_v4, SelfReported),complete.cases)),
aes(x = SelfReported/10^6, y = GPW_v4/10^6))+
geom_point(aes(color = QA_Eval_pop))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
complete_context_plot_lat <- complete_context_w_QA%>%
mutate(territory_datasource= case_when(territory_datasource == 'CCNT' ~ 'SelfReported',
territory_datasource == 'NZT'~ 'SelfReported',
territory_datasource == 'C40'~ 'SelfReported',
territory_datasource == 'CDPe'~ 'SelfReported',
territory_datasource == 'CDPc'~ 'SelfReported',
territory_datasource == 'GCoM'~ 'SelfReported',
territory_datasource == 'CDP'~ 'SelfReported',
territory_datasource == 'EUC'~ 'SelfReported',
territory_datasource == 'JRC'~ 'SelfReported',
territory_datasource == 'USCM'~ 'SelfReported',
territory_datasource == 'USEIA'~ 'SelfReported',
territory_datasource == 'ICLEI'~ 'SelfReported',
territory_datasource == 'JPPT'~ 'SelfReported',
TRUE ~ territory_datasource))%>%
select(name, iso, entity_type,  QA_Eval_cent, lat, starts_with("territory"))%>%distinct()%>%
filter(if_all(c(lat, territory_datasource), complete.cases))%>%
group_by(name, iso, entity_type, territory_datasource)%>% add_count()%>%mutate(registry_id_cent = 1:n())%>%
filter( n == 1)%>%select(-registry_id_cent, -n)%>% ungroup()%>%
pivot_wider(names_from = territory_datasource, values_from = lat)
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_wiki_lat.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_lat %>% select(wikipedia, SelfReported, QA_Eval_cent)
%>% filter(if_all(c(wikipedia, SelfReported),complete.cases)),
aes(x = SelfReported, y = wikipedia))+
geom_point(aes(color = QA_Eval_cent))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_gadm_lat.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_lat %>% select(GADM, SelfReported, QA_Eval_cent)
%>% filter(if_all(c(GADM, SelfReported),complete.cases)),
aes(x = SelfReported, y = GADM))+
geom_point(aes(color = QA_Eval_cent))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
complete_context_plot_lng <- complete_context_w_QA%>%
mutate(territory_datasource= case_when(territory_datasource == 'CCNT' ~ 'SelfReported',
territory_datasource == 'NZT'~ 'SelfReported',
territory_datasource == 'C40'~ 'SelfReported',
territory_datasource == 'CDPe'~ 'SelfReported',
territory_datasource == 'CDPc'~ 'SelfReported',
territory_datasource == 'GCoM'~ 'SelfReported',
territory_datasource == 'CDP'~ 'SelfReported',
territory_datasource == 'EUC'~ 'SelfReported',
territory_datasource == 'JRC'~ 'SelfReported',
territory_datasource == 'USCM'~ 'SelfReported',
territory_datasource == 'USEIA'~ 'SelfReported',
territory_datasource == 'ICLEI'~ 'SelfReported',
territory_datasource == 'JPPT'~ 'SelfReported',
TRUE ~ territory_datasource))%>%
select(name, iso, entity_type,  QA_Eval_cent, lng, starts_with("territory"))%>%distinct()%>%
filter(if_all(c(lng, territory_datasource), complete.cases))%>%
group_by(name, iso, entity_type, territory_datasource)%>% add_count()%>%mutate(registry_id_cent = 1:n())%>%
filter( n == 1)%>%select(-registry_id_cent, -n)%>% ungroup()%>%
pivot_wider(names_from = territory_datasource, values_from = lng)
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_wiki_lng.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_lng %>% select(wikipedia, SelfReported, QA_Eval_cent)
%>% filter(if_all(c(wikipedia, SelfReported),complete.cases)),
aes(x = SelfReported, y = wikipedia))+
geom_point(aes(color = QA_Eval_cent))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_gadm_lng.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_lng %>% select(GADM, SelfReported, QA_Eval_cent)
%>% filter(if_all(c(GADM, SelfReported),complete.cases)),
aes(x = SelfReported, y = GADM))+
geom_point(aes(color = QA_Eval_cent))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
complete_context_plot_area <- complete_context_w_QA%>%
mutate(territory_datasource= case_when(territory_datasource == 'CCNT' ~ 'SelfReported',
territory_datasource == 'NZT'~ 'SelfReported',
territory_datasource == 'C40'~ 'SelfReported',
territory_datasource == 'CDPe'~ 'SelfReported',
territory_datasource == 'CDPc'~ 'SelfReported',
territory_datasource == 'GCoM'~ 'SelfReported',
territory_datasource == 'CDP'~ 'SelfReported',
territory_datasource == 'EUC'~ 'SelfReported',
territory_datasource == 'JRC'~ 'SelfReported',
territory_datasource == 'USCM'~ 'SelfReported',
territory_datasource == 'USEIA'~ 'SelfReported',
territory_datasource == 'ICLEI'~ 'SelfReported',
territory_datasource == 'JPPT'~ 'SelfReported',
TRUE ~ territory_datasource))%>%
select(name, iso, entity_type,  QA_Eval_area, area, starts_with("territory"))%>%distinct()%>%
filter(if_all(c(area, territory_datasource), complete.cases))%>%
group_by(name, iso, entity_type, territory_datasource)%>% add_count()%>%mutate(registry_id_cent = 1:n())%>%
filter( n == 1)%>%select(-registry_id_cent, -n)%>% ungroup()%>%
pivot_wider(names_from = territory_datasource, values_from = area)
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_wiki_area.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_area %>% select(wikipedia, SelfReported, QA_Eval_area)
%>% filter(if_all(c(wikipedia, SelfReported),complete.cases)),
aes(x = SelfReported, y = wikipedia))+
geom_point(aes(color = QA_Eval_area))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
Cairo("GitHub/climactor-process/contextual_matching/plots/selfreported_gadm_area.png", type = "png", res= 300, width = 2500, height =2500)
ggplot(complete_context_plot_area %>% select(GADM, SelfReported, QA_Eval_area)
%>% filter(if_all(c(GADM, SelfReported),complete.cases)),
aes(x = SelfReported, y = GADM))+
geom_point(aes(color = QA_Eval_area))+
geom_smooth()+
stat_poly_eq(use_label(c("eq", "R2"))) +
tune::coord_obs_pred()
dev.off()
View(qa_geom_pass_full)
View(complete_context)
complete_context %>% select(name, iso, entity_type, lat, lng, territory_datasource)%>% distinct() %>% nrow()
View(qa_geom_pass_full)
complete_context %>% select(name, iso, entity_type, population, population_year, population_datasource)%>% distinct() %>% nrow()
View(complete_context)
View(qa_pop_pass_full)
View(qa_pop_pass_full)
distinct() %>% nrow()
distinct() %>% nrow()
complete_context %>%
select(name, iso, entity_type, population, population_year, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct() %>% nrow()
View(qa_pop_pass_full)
qa_pop_pass_full %>% select(name, iso, entity_type, population, population_year, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct() %>% nrow()
qa_pop_pass_full %>% select(name, iso, entity_type, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct() %>% nrow()
(qa_pop_pass_full %>% select(name, iso, entity_type, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct() %>% nrow())/
(complete_context %>%
select(name, iso, entity_type, population, population_year, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct() %>% nrow())
View(complete_context)
(a<-qa_pop_pass_full %>% select(name, iso, entity_type, population_year, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct() %>% nrow())
(complete_context %>%
select(name, iso, entity_type, population, population_year, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct() %>% nrow())
View(complete_context)
(a<-qa_pop_pass_full %>% select(name, iso, entity_type, population_year, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct())
View(a)
(aa <-complete_context %>%
select(name, iso, entity_type, population, population_year, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct())
View(aa)
distinct()%>% filter(complete.cases(.))
(aa <-complete_context %>%
select(name, iso, entity_type, population, population_year, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct()%>% filter(complete.cases(.)))
View(aa)
(qa_pop_pass_full %>% select(name, iso, entity_type, population_year, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct()%>% nrow())/
(complete_context %>%
select(name, iso, entity_type, population, population_year, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct()%>% filter(complete.cases(.)) %>% nrow())
(qa_geom_pass_full %>% select(name, iso, entity_type, lat, lng, population_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct()%>% nrow())/
(complete_context %>%
select(name, iso, entity_type, lat, lng, territory_datasource)%>%
filter(!population_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct()%>% filter(complete.cases(.)) %>% nrow())
View(complete_context)
(qa_geom_pass_full %>% select(name, iso, entity_type, lat, lng, population_datasource)%>%
filter(!territory_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct()%>% nrow())/
(complete_context %>%
select(name, iso, entity_type, lat, lng, territory_datasource)%>%
filter(!territory_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct()%>% filter(complete.cases(.)) %>% nrow())
View(qa_geom_pass_full)
View(qa_geom_pass_full)
(qa_geom_pass_full %>% select(name, iso, entity_type, territory_datasource)%>%
filter(!territory_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct()%>% nrow())/
(complete_context %>%
select(name, iso, entity_type, lat, lng, territory_datasource)%>%
filter(!territory_datasource %in% c('wikipedia', 'GPW_v4'))%>%
distinct()%>% filter(complete.cases(.)) %>% nrow())
View(complete_context)
View(complete_context_w_QA)
install.packages(c("shinylive", "httpuv"))
packageVersion("httpuv")
library(httpuv)
remove.packages("httpuv")
install.packages(c("shinylive", "httpuv"))
install.packages(c("shinylive", "httpuv"))
runStaticServer("smogstripes-web")
httpuv::runStaticServer("smogstripes-web/", port=8008)
httpuv::runStaticServer("smogstripes-web", port=8008)
library(pak)
library(shinylive)
library(httpuv)
shinylive::export("smogstripes-app", "smogstripes-web")
setwd("~/GitHub/smogstripes")
shinylive::export("smogstripes-app", "smogstripes-web")
httpuv::runStaticServer("smogstripes-web", port=8008)
a<- read_csv("https://raw.githubusercontent.com/datadrivenenvirolab/smogstrippes_web/main/data/data_w_aqg.csv")
library(readr)
a<- read_csv("https://raw.githubusercontent.com/datadrivenenvirolab/smogstrippes_web/main/data/data_w_aqg.csv")
setwd("~/GitHub/smogstrippes_web")
shinylive::export("smogstripes-app", "smogstripes-web")
httpuv::runStaticServer("smogstripes-web", port=8008)
setwd("~/GitHub/shiny_web")
